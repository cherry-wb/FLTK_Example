// generated by Fast Light User Interface Designer (fluid) version 1.0109

#ifndef InterfaceGUI_h
#define InterfaceGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Output.H>

class InterfaceGUI {
public:
  InterfaceGUI(int,int,int,int,const char*);
  Fl_Window *g_MainWindow;
  Fl_Menu_Bar *g_MenuBar;
  static Fl_Menu_Item menu_g_MenuBar[];
  static Fl_Menu_Item *g_OpenFileButton;
private:
  void cb_g_OpenFileButton_i(Fl_Menu_*, void*);
  static void cb_g_OpenFileButton(Fl_Menu_*, void*);
public:
  Fl_Return_Button *g_ReturnButton;
private:
  void cb_g_ReturnButton_i(Fl_Return_Button*, void*);
  static void cb_g_ReturnButton(Fl_Return_Button*, void*);
public:
  Fl_Check_Button *g_QCPicButton;
private:
  void cb_g_QCPicButton_i(Fl_Check_Button*, void*);
  static void cb_g_QCPicButton(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *g_QCMontageButton;
private:
  void cb_g_QCMontageButton_i(Fl_Check_Button*, void*);
  static void cb_g_QCMontageButton(Fl_Check_Button*, void*);
public:
  Fl_Round_Button *g_EMS15Button;
private:
  void cb_g_EMS15Button_i(Fl_Round_Button*, void*);
  static void cb_g_EMS15Button(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *g_EMS17Button;
private:
  void cb_g_EMS17Button_i(Fl_Round_Button*, void*);
  static void cb_g_EMS17Button(Fl_Round_Button*, void*);
public:
  Fl_Button *g_DataDirectory;
private:
  void cb_g_DataDirectory_i(Fl_Button*, void*);
  static void cb_g_DataDirectory(Fl_Button*, void*);
public:
  Fl_Button *g_SegmentationAtlasDirectory;
private:
  void cb_g_SegmentationAtlasDirectory_i(Fl_Button*, void*);
  static void cb_g_SegmentationAtlasDirectory(Fl_Button*, void*);
public:
  Fl_Button *g_ReferenceImage;
private:
  void cb_g_ReferenceImage_i(Fl_Button*, void*);
  static void cb_g_ReferenceImage(Fl_Button*, void*);
public:
  Fl_Output *g_DataDirectoryDisp;
  Fl_Output *g_ReferenceImageDisp;
  Fl_Output *g_SegmentationAtlasDisp;
  Fl_Group *g_MyGroup;
  Fl_Button *g_Button;
  Fl_Group *g_MyGroup2;
  Fl_Button *g_Button2;
  virtual void Compute();
  virtual void OpenFileButtonPressed();
  virtual void EMS15ButtonPressed();
  virtual void EMS17ButtonPressed();
  virtual void QCPicButtonPressed();
  virtual void QCMontageButtonPressed();
  virtual void SelectDataDirectoryGUI();
  virtual void SelectSegmentationAtlasDirectoryGUI();
  virtual void SelectReferenceImageGUI();
};
#endif
