PROJECT(FLTK_TEST)

#INCLUDE (${FLTK_TEST_SOURCE_DIR}/FindInsightApplications.cmake)
#INCLUDE (${FLTK_TEST_SOURCE_DIR}/FindSOV.cmake)

#FIND_PACKAGE(OpenGL)

FIND_PACKAGE(FLTK)
IF(FLTK_FOUND)
  INCLUDE_DIRECTORIES(${FLTK_INCLUDE_DIR})
ENDIF(FLTK_FOUND)

#FIND_PACKAGE(ITK)
#IF(ITK_FOUND)
#  INCLUDE(${USE_ITK_FILE})    
#ELSE(ITK_FOUND)
#  MESSAGE(FATAL_ERROR "ITK not found. Please set ITK_DIR")
#ENDIF(ITK_FOUND)

#FIND_PACKAGE(VTK)
#IF(VTK_FOUND)
#  INCLUDE(${USE_VTK_FILE})
#ELSE(VTK_FOUND)
#  MESSAGE(FATAL_ERROR "VTK not found. Please set VTK_DIR")
#ENDIF(VTK_FOUND)


#FIND_PACKAGE(SOV) 
#IF(SOV_FOUND)
# INCLUDE(${SOV_USE_FILE})
#ENDIF(SOV_FOUND) 

SET(GUI_FILES
  InterfaceGUI.fl  
)

FLTK_WRAP_UI(FLTK_TEST ${GUI_FILES})

SET(CXX_FILES 
  main.cxx
  InterfaceGUIControls.cxx
)

SET(H_FILES
  InterfaceGUIControls.h
)


LINK_LIBRARIES(
  #ITKFltkImageViewer
  #${ITK_LIBRARIES}
  ${FLTK_LIBRARIES}
  #${OPENGL_LIBRARIES}
  #${VTK_LIBRARIES}
#	${SOV_LIBARIES}
#	SOViewer
#	SOVVTKRenderMethod
#	FltkSOViewer3D
)

IF(UNIX)
 SET(X11_Xext_LIB
  Xxf86vm
 )
 
 FIND_PACKAGE(X11)
 LINK_LIBRARIES(
  ${X11_LIBRARIES}
 )
ENDIF(UNIX)

ADD_EXECUTABLE(FLTK_TEST ${CXX_FILES} ${H_FILES} ${FLTK_TEST_FLTK_UI_SRCS})
