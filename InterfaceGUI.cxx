// generated by Fast Light User Interface Designer (fluid) version 1.0109

#include "InterfaceGUI.h"

void InterfaceGUI::cb_g_OpenFileButton_i(Fl_Menu_*, void*) {
  OpenFileButtonPressed();
}
void InterfaceGUI::cb_g_OpenFileButton(Fl_Menu_* o, void* v) {
  ((InterfaceGUI*)(o->parent()->user_data()))->cb_g_OpenFileButton_i(o,v);
}

Fl_Menu_Item InterfaceGUI::menu_g_MenuBar[] = {
 {"File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Open...", 0,  (Fl_Callback*)InterfaceGUI::cb_g_OpenFileButton, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* InterfaceGUI::g_OpenFileButton = InterfaceGUI::menu_g_MenuBar + 1;

void InterfaceGUI::cb_g_ReturnButton_i(Fl_Return_Button*, void*) {
  Compute();
}
void InterfaceGUI::cb_g_ReturnButton(Fl_Return_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->user_data()))->cb_g_ReturnButton_i(o,v);
}

void InterfaceGUI::cb_g_QCPicButton_i(Fl_Check_Button*, void*) {
  QCPicButtonPressed();
}
void InterfaceGUI::cb_g_QCPicButton(Fl_Check_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->parent()->user_data()))->cb_g_QCPicButton_i(o,v);
}

void InterfaceGUI::cb_g_QCMontageButton_i(Fl_Check_Button*, void*) {
  QCMontageButtonPressed();
}
void InterfaceGUI::cb_g_QCMontageButton(Fl_Check_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->parent()->user_data()))->cb_g_QCMontageButton_i(o,v);
}

void InterfaceGUI::cb_g_EMS15Button_i(Fl_Round_Button*, void*) {
  EMS15ButtonPressed();
}
void InterfaceGUI::cb_g_EMS15Button(Fl_Round_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->parent()->user_data()))->cb_g_EMS15Button_i(o,v);
}

void InterfaceGUI::cb_g_EMS17Button_i(Fl_Round_Button*, void*) {
  EMS17ButtonPressed();
}
void InterfaceGUI::cb_g_EMS17Button(Fl_Round_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->parent()->user_data()))->cb_g_EMS17Button_i(o,v);
}

void InterfaceGUI::cb_g_DataDirectory_i(Fl_Button*, void*) {
  SelectDataDirectoryGUI();
}
void InterfaceGUI::cb_g_DataDirectory(Fl_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->user_data()))->cb_g_DataDirectory_i(o,v);
}

void InterfaceGUI::cb_g_SegmentationAtlasDirectory_i(Fl_Button*, void*) {
  SelectSegmentationAtlasDirectoryGUI();
}
void InterfaceGUI::cb_g_SegmentationAtlasDirectory(Fl_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->user_data()))->cb_g_SegmentationAtlasDirectory_i(o,v);
}

void InterfaceGUI::cb_g_ReferenceImage_i(Fl_Button*, void*) {
  SelectReferenceImageGUI();
}
void InterfaceGUI::cb_g_ReferenceImage(Fl_Button* o, void* v) {
  ((InterfaceGUI*)(o->parent()->user_data()))->cb_g_ReferenceImage_i(o,v);
}

InterfaceGUI::InterfaceGUI(int,int,int,int,const char*) {
  { g_MainWindow = new Fl_Window(690, 325, "Automatic Segmentation");
    g_MainWindow->box(FL_UP_BOX);
    g_MainWindow->user_data((void*)(this));
    g_MainWindow->align(65);
    { g_MenuBar = new Fl_Menu_Bar(0, 0, 840, 20);
      g_MenuBar->down_box(FL_UP_FRAME);
      g_MenuBar->menu(menu_g_MenuBar);
    } // Fl_Menu_Bar* g_MenuBar
    { g_ReturnButton = new Fl_Return_Button(440, 245, 120, 35, "Compute");
      g_ReturnButton->callback((Fl_Callback*)cb_g_ReturnButton);
    } // Fl_Return_Button* g_ReturnButton
    { Fl_Group* o = new Fl_Group(475, 66, 157, 109, "Quality Control");
      o->box(FL_ENGRAVED_FRAME);
      o->align(FL_ALIGN_TOP_LEFT);
      { g_QCPicButton = new Fl_Check_Button(500, 91, 64, 15, "Pictures");
        g_QCPicButton->down_box(FL_DOWN_BOX);
        g_QCPicButton->callback((Fl_Callback*)cb_g_QCPicButton);
      } // Fl_Check_Button* g_QCPicButton
      { g_QCMontageButton = new Fl_Check_Button(500, 118, 80, 20, "Montage");
        g_QCMontageButton->down_box(FL_DOWN_BOX);
        g_QCMontageButton->callback((Fl_Callback*)cb_g_QCMontageButton);
      } // Fl_Check_Button* g_QCMontageButton
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(285, 65, 160, 75, "EMS Release");
      o->box(FL_ENGRAVED_FRAME);
      o->align(133);
      { g_EMS15Button = new Fl_Round_Button(305, 75, 85, 25, "1.5");
        g_EMS15Button->down_box(FL_ROUND_DOWN_BOX);
        g_EMS15Button->value(1);
        g_EMS15Button->callback((Fl_Callback*)cb_g_EMS15Button);
      } // Fl_Round_Button* g_EMS15Button
      { g_EMS17Button = new Fl_Round_Button(306, 105, 64, 15, "1.7");
        g_EMS17Button->down_box(FL_ROUND_DOWN_BOX);
        g_EMS17Button->callback((Fl_Callback*)cb_g_EMS17Button);
      } // Fl_Round_Button* g_EMS17Button
      o->end();
    } // Fl_Group* o
    { g_DataDirectory = new Fl_Button(30, 72, 31, 20, "...");
      g_DataDirectory->callback((Fl_Callback*)cb_g_DataDirectory);
    } // Fl_Button* g_DataDirectory
    { g_SegmentationAtlasDirectory = new Fl_Button(30, 230, 32, 20, "...");
      g_SegmentationAtlasDirectory->callback((Fl_Callback*)cb_g_SegmentationAtlasDirectory);
    } // Fl_Button* g_SegmentationAtlasDirectory
    { g_ReferenceImage = new Fl_Button(31, 145, 30, 20, "...");
      g_ReferenceImage->callback((Fl_Callback*)cb_g_ReferenceImage);
    } // Fl_Button* g_ReferenceImage
    { g_DataDirectoryDisp = new Fl_Output(70, 66, 155, 28, "Data Directory");
      g_DataDirectoryDisp->align(FL_ALIGN_TOP_LEFT);
    } // Fl_Output* g_DataDirectoryDisp
    { g_ReferenceImageDisp = new Fl_Output(75, 141, 150, 28, "Reference Image");
      g_ReferenceImageDisp->align(FL_ALIGN_TOP_LEFT);
    } // Fl_Output* g_ReferenceImageDisp
    { g_SegmentationAtlasDisp = new Fl_Output(75, 226, 150, 24, "Segmentation Atlas");
      g_SegmentationAtlasDisp->align(FL_ALIGN_TOP_LEFT);
    } // Fl_Output* g_SegmentationAtlasDisp
    { g_MyGroup = new Fl_Group(280, 160, 175, 65, "Group");
      g_MyGroup->box(FL_ENGRAVED_FRAME);
      { g_Button = new Fl_Button(305, 185, 64, 20, "button");
      } // Fl_Button* g_Button
      g_MyGroup->end();
    } // Fl_Group* g_MyGroup
    { g_MyGroup2 = new Fl_Group(280, 160, 175, 65, "group2");
      { g_Button2 = new Fl_Button(305, 185, 64, 20, "button2");
        g_Button2->labelsize(8);
      } // Fl_Button* g_Button2
      g_MyGroup2->end();
    } // Fl_Group* g_MyGroup2
    g_MainWindow->end();
    g_MainWindow->resizable(g_MainWindow);
  } // Fl_Window* g_MainWindow
}

void InterfaceGUI::Compute() {
}

void InterfaceGUI::OpenFileButtonPressed() {
}

void InterfaceGUI::EMS15ButtonPressed() {
}

void InterfaceGUI::EMS17ButtonPressed() {
}

void InterfaceGUI::QCPicButtonPressed() {
}

void InterfaceGUI::QCMontageButtonPressed() {
}

void InterfaceGUI::SelectDataDirectoryGUI() {
}

void InterfaceGUI::SelectSegmentationAtlasDirectoryGUI() {
}

void InterfaceGUI::SelectReferenceImageGUI() {
}
